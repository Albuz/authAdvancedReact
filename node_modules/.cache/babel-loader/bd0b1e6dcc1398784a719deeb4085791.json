{"ast":null,"code":"var _jsxFileName = \"/Users/albertosviluppo/Documents/workplace/authAdvancedReact/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from \"react\";\nimport AuthContex from \"../../stores/auth-context\";\nimport { useHistory } from \"react-router-dom\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const history = useHistory();\n  const [isLogin, setIsLogin] = useState(true);\n  const authContext = useContext(AuthContex);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandelr = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    if (isLogin) {\n      const logIn = fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBO4gXLdBK4BNFBa-3Wti3kAXTRoZDaGec\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        return res.json().then(data => {\n          authContext.login(data.idToken, new Date(new Date().getTime() + +data.expiresImn * 1000).toISOString);\n          history.replace('/');\n        });\n      }).catch(err => {});\n    } else {\n      const signUp = fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBO4gXLdBK4BNFBa-3Wti3kAXTRoZDaGec\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        if (res.ok) {\n          console.log(\"everything is setup\", res);\n        } else {\n          return res.json().then(data => {\n            alert(data.error.message);\n          });\n        }\n      }).catch(err => {});\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandelr,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"m0P8DLVnF1qvQoE03YV3PCBrq10=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","useRef","useContext","AuthContex","useHistory","classes","AuthForm","emailInputRef","passwordInputRef","history","isLogin","setIsLogin","authContext","switchAuthModeHandler","prevState","submitHandelr","event","preventDefault","enteredEmail","current","value","enteredPassword","logIn","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","json","data","login","idToken","Date","getTime","expiresImn","toISOString","replace","catch","err","signUp","ok","console","log","alert","error","message","auth","control","actions","toggle"],"sources":["/Users/albertosviluppo/Documents/workplace/authAdvancedReact/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useState, useRef, useContext } from \"react\";\nimport AuthContex from \"../../stores/auth-context\";\nimport { useHistory } from \"react-router-dom\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const history = useHistory()\n  const [isLogin, setIsLogin] = useState(true);\n\n  const authContext = useContext(AuthContex);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandelr = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    if (isLogin) {\n      const logIn = fetch(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBO4gXLdBK4BNFBa-3Wti3kAXTRoZDaGec\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            email: enteredEmail,\n            password: enteredPassword,\n            returnSecureToken: true,\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n        .then((res) => {\n          return res.json().then((data) => {\n            authContext.login(data.idToken, new Date(new Date().getTime() + (+data.expiresImn * 1000)).toISOString);\n            history.replace('/')\n          });\n        })\n        .catch((err) => {});\n    } else {\n      const signUp = fetch(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBO4gXLdBK4BNFBa-3Wti3kAXTRoZDaGec\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            email: enteredEmail,\n            password: enteredPassword,\n            returnSecureToken: true,\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n        .then((res) => {\n          if (res.ok) {\n            console.log(\"everything is setup\", res);\n          } else {\n            return res.json().then((data) => {\n              alert(data.error.message);\n            });\n          }\n        })\n        .catch((err) => {});\n    }\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandelr}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}